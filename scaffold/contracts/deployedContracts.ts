/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  97: {
    YarBridge20: {
      address: "0x119A340E8f6294eDeA95677a2Fdb5a6E8Ad3164c",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "initialNativeName",
              type: "string",
            },
            {
              internalType: "string",
              name: "initialNativeSymbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "initialNativeDecimals",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "intialYarRequest",
              type: "address",
            },
            {
              internalType: "address",
              name: "intialYarResponse",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          inputs: [],
          name: "bridgedTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          name: "deployFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
          ],
          name: "deployTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
          ],
          name: "getBridgedTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_chainId",
              type: "uint256",
            },
          ],
          name: "getPeer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "bridgedToken",
              type: "address",
            },
          ],
          name: "isBridgedToken",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeDecimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeName",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeSymbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
          ],
          name: "needDeploy",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "peers",
          outputs: [
            {
              internalType: "address",
              name: "peer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newPeer",
              type: "address",
            },
          ],
          name: "setPeer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "yarRequest",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "yarResponse",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarBridge721: {
      address: "0x37CF08dDCd3e2334d7A413A8eb1E4F4526b68a23",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialYarRequest",
              type: "address",
            },
            {
              internalType: "address",
              name: "intialYarResponse",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "bridgedTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "originalToken",
              type: "bytes",
            },
          ],
          name: "getBridgedTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_chainId",
              type: "uint256",
            },
          ],
          name: "getPeer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "token721",
              type: "address",
            },
          ],
          name: "getTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "bridgedToken",
              type: "address",
            },
          ],
          name: "isBridgedToken",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuedToken",
              type: "address",
            },
          ],
          name: "isIssuedTokenPublished",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "issuedTokens",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "peers",
          outputs: [
            {
              internalType: "address",
              name: "peer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newPeer",
              type: "address",
            },
          ],
          name: "setPeer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "originalToken",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "tokenName",
              type: "string",
            },
            {
              internalType: "string",
              name: "tokenSymbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "tokenUri",
              type: "string",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token721",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "yarRequest",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "yarResponse",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onERC721Received:
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      },
    },
    YarERC721: {
      address: "0x9bf2C407fb8aD41E0616a6510B42Ae4493dECa5b",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name_",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol_",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC721IncorrectOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ERC721InsufficientApproval",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC721InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "ERC721InvalidOperator",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC721InvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC721InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC721InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ERC721NonexistentToken",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        supportsInterface:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        approve:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        getApproved:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        isApprovedForAll:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        ownerOf:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        safeTransferFrom:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        setApprovalForAll:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        name: "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        tokenURI:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      },
    },
    YarRequest: {
      address: "0x24e03AbB3f168a4deD0171060eFDB9a170bE193d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialRelayer",
              type: "address",
            },
            {
              internalType: "address",
              name: "initailFeeToken",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialChainId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Approve",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "depositor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feesToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
          ],
          name: "Send",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "address",
              name: "app",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
          ],
          name: "approvals",
          outputs: [
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "feeToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nonce",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
          ],
          name: "send",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarResponse: {
      address: "0xAB4435F7E8a5C50798EBF367217cfba3Bb2DF7cb",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialRelayer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
          ],
          name: "deliver",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "trustedYarTx",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  80002: {
    YarBridge20: {
      address: "0x119A340E8f6294eDeA95677a2Fdb5a6E8Ad3164c",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "initialNativeName",
              type: "string",
            },
            {
              internalType: "string",
              name: "initialNativeSymbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "initialNativeDecimals",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "intialYarRequest",
              type: "address",
            },
            {
              internalType: "address",
              name: "intialYarResponse",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          inputs: [],
          name: "bridgedTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          name: "deployFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
          ],
          name: "deployTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
          ],
          name: "getBridgedTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_chainId",
              type: "uint256",
            },
          ],
          name: "getPeer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "bridgedToken",
              type: "address",
            },
          ],
          name: "isBridgedToken",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeDecimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeName",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeSymbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
          ],
          name: "needDeploy",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "peers",
          outputs: [
            {
              internalType: "address",
              name: "peer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newPeer",
              type: "address",
            },
          ],
          name: "setPeer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "yarRequest",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "yarResponse",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarBridge721: {
      address: "0x92D300070234e2d31ce4529d6AB32C67e93B0536",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialYarRequest",
              type: "address",
            },
            {
              internalType: "address",
              name: "intialYarResponse",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "bridgedTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "originalToken",
              type: "bytes",
            },
          ],
          name: "getBridgedTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_chainId",
              type: "uint256",
            },
          ],
          name: "getPeer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "token721",
              type: "address",
            },
          ],
          name: "getTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "bridgedToken",
              type: "address",
            },
          ],
          name: "isBridgedToken",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuedToken",
              type: "address",
            },
          ],
          name: "isIssuedTokenPublished",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "issuedTokens",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "peers",
          outputs: [
            {
              internalType: "address",
              name: "peer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newPeer",
              type: "address",
            },
          ],
          name: "setPeer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "originalToken",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "tokenName",
              type: "string",
            },
            {
              internalType: "string",
              name: "tokenSymbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "tokenUri",
              type: "string",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token721",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "yarRequest",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "yarResponse",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onERC721Received:
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      },
    },
    YarERC721: {
      address: "0x2d350Cf9Ea58de30A466e8c139EE3e4269EF24a9",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name_",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol_",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC721IncorrectOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ERC721InsufficientApproval",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC721InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "ERC721InvalidOperator",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC721InvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC721InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC721InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ERC721NonexistentToken",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        supportsInterface:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        approve:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        getApproved:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        isApprovedForAll:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        ownerOf:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        safeTransferFrom:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        setApprovalForAll:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        name: "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        tokenURI:
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      },
    },
    YarRequest: {
      address: "0x24e03AbB3f168a4deD0171060eFDB9a170bE193d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialRelayer",
              type: "address",
            },
            {
              internalType: "address",
              name: "initailFeeToken",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialChainId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Approve",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "depositor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feesToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
          ],
          name: "Send",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "address",
              name: "app",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
          ],
          name: "approvals",
          outputs: [
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "feeToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nonce",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
          ],
          name: "send",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarResponse: {
      address: "0xAB4435F7E8a5C50798EBF367217cfba3Bb2DF7cb",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialRelayer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
          ],
          name: "deliver",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "trustedYarTx",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  10226688: {
    Multicall3: {
      address: "0xc8dA05D15D278792ff0c26bC4436F1F801A06c63",
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "aggregate",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
            {
              internalType: "bytes[]",
              name: "returnData",
              type: "bytes[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "allowFailure",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call3[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "aggregate3",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "allowFailure",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call3Value[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "aggregate3Value",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "blockAndAggregate",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getBasefee",
          outputs: [
            {
              internalType: "uint256",
              name: "basefee",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
          ],
          name: "getBlockHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getBlockNumber",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getChainId",
          outputs: [
            {
              internalType: "uint256",
              name: "chainid",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockCoinbase",
          outputs: [
            {
              internalType: "address",
              name: "coinbase",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockDifficulty",
          outputs: [
            {
              internalType: "uint256",
              name: "difficulty",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockGasLimit",
          outputs: [
            {
              internalType: "uint256",
              name: "gaslimit",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockTimestamp",
          outputs: [
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
          ],
          name: "getEthBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLastBlockHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "requireSuccess",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "tryAggregate",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "requireSuccess",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "tryBlockAndAggregate",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarBridge20: {
      address: "0x119A340E8f6294eDeA95677a2Fdb5a6E8Ad3164c",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "initialNativeName",
              type: "string",
            },
            {
              internalType: "string",
              name: "initialNativeSymbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "initialNativeDecimals",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "intialYarRequest",
              type: "address",
            },
            {
              internalType: "address",
              name: "intialYarResponse",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          inputs: [],
          name: "bridgedTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          name: "deployFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
          ],
          name: "deployTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
          ],
          name: "getBridgedTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_chainId",
              type: "uint256",
            },
          ],
          name: "getPeer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "bridgedToken",
              type: "address",
            },
          ],
          name: "isBridgedToken",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeDecimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeName",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeSymbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
          ],
          name: "needDeploy",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "peers",
          outputs: [
            {
              internalType: "address",
              name: "peer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newPeer",
              type: "address",
            },
          ],
          name: "setPeer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "originalToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "yarRequest",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "yarResponse",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarBridge721: {
      address: "0x92D300070234e2d31ce4529d6AB32C67e93B0536",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialYarRequest",
              type: "address",
            },
            {
              internalType: "address",
              name: "intialYarResponse",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "bridgedTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "originalToken",
              type: "bytes",
            },
          ],
          name: "getBridgedTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_chainId",
              type: "uint256",
            },
          ],
          name: "getPeer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "token721",
              type: "address",
            },
          ],
          name: "getTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "bridgedToken",
              type: "address",
            },
          ],
          name: "isBridgedToken",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuedToken",
              type: "address",
            },
          ],
          name: "isIssuedTokenPublished",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "issuedTokens",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "peers",
          outputs: [
            {
              internalType: "address",
              name: "peer",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newPeer",
              type: "address",
            },
          ],
          name: "setPeer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "originalChainId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "originalToken",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "tokenName",
              type: "string",
            },
            {
              internalType: "string",
              name: "tokenSymbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "tokenUri",
              type: "string",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token721",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "targetChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "transferTo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "yarRequest",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "yarResponse",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onERC721Received:
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      },
    },
    YarHub: {
      address: "0x2d260f17EB559E18D481510C7D11FA30096BFeFA",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialRelayer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialFeesRatio",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "intiailChainId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Approve",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "enum YarHub.TxStatus",
              name: "status",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "usedFees",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feesToReturn",
              type: "uint256",
            },
          ],
          name: "CommitTransaction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
          ],
          name: "CreateTransaction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "EarnedFees",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
          ],
          name: "ExecuteTransaction",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "intiailChainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "targetTxHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "usedFees",
              type: "uint256",
            },
          ],
          name: "completeTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "initialTxHash",
              type: "bytes32",
            },
          ],
          name: "createTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "feeTokenAmount",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "deposits",
          outputs: [
            {
              internalType: "uint256",
              name: "feeTokenAmount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "earnedFees",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "feeTokensToLock",
              type: "uint256",
            },
          ],
          name: "executeTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "feesBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "feesRatio",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
          ],
          name: "getYarTxHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "targetTxHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "usedFees",
              type: "uint256",
            },
          ],
          name: "rejectTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newFeesRation",
              type: "uint256",
            },
          ],
          name: "setFeesRatio",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalLockedFees",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "withdrawFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
          ],
          name: "wrappedYarTXs",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
            {
              internalType: "enum YarHub.TxStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "lockedFees",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "usedFees",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "initialTxHash",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "targetTxHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
    YarRequest: {
      address: "0x24e03AbB3f168a4deD0171060eFDB9a170bE193d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialRelayer",
              type: "address",
            },
            {
              internalType: "address",
              name: "initailFeeToken",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialChainId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Approve",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "depositor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "feesToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
          ],
          name: "Send",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "address",
              name: "app",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "yarTxHash",
              type: "bytes32",
            },
          ],
          name: "approvals",
          outputs: [
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "feeToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nonce",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTX",
              type: "tuple",
            },
          ],
          name: "send",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YarResponse: {
      address: "0xAB4435F7E8a5C50798EBF367217cfba3Bb2DF7cb",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "intialRelayer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "yarTx",
              type: "tuple",
            },
          ],
          name: "deliver",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "relayer",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "trustedYarTx",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "initialChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "payer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "targetChainId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "_nonce",
                  type: "uint256",
                },
              ],
              internalType: "struct YarLib.YarTX",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
