{
  "address": "0x2d260f17EB559E18D481510C7D11FA30096BFeFA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialRelayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialFeesRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "intiailChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct YarLib.YarTX",
          "name": "yarTx",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "yarTxHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "enum YarHub.TxStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usedFees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToReturn",
          "type": "uint256"
        }
      ],
      "name": "CommitTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct YarLib.YarTX",
          "name": "yarTx",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "yarTxHash",
          "type": "bytes32"
        }
      ],
      "name": "CreateTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EarnedFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct YarLib.YarTX",
          "name": "yarTx",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "yarTxHash",
          "type": "bytes32"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "intiailChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct YarLib.YarTX",
          "name": "yarTX",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "targetTxHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "usedFees",
          "type": "uint256"
        }
      ],
      "name": "completeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct YarLib.YarTX",
          "name": "yarTX",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "initialTxHash",
          "type": "bytes32"
        }
      ],
      "name": "createTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeTokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earnedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct YarLib.YarTX",
          "name": "yarTX",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "feeTokensToLock",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct YarLib.YarTX",
          "name": "yarTX",
          "type": "tuple"
        }
      ],
      "name": "getYarTxHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct YarLib.YarTX",
          "name": "yarTX",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "targetTxHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "usedFees",
          "type": "uint256"
        }
      ],
      "name": "rejectTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeesRation",
          "type": "uint256"
        }
      ],
      "name": "setFeesRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLockedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "yarTxHash",
          "type": "bytes32"
        }
      ],
      "name": "wrappedYarTXs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct YarLib.YarTX",
          "name": "yarTx",
          "type": "tuple"
        },
        {
          "internalType": "enum YarHub.TxStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "lockedFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usedFees",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "initialTxHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "targetTxHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xaf78c26f62957a7a264f34e97fdba937a5bbed1ac5437e003aa1bfcd8e70d24a",
  "receipt": {
    "to": null,
    "from": "0x9Bb39660600aD0c57615Ea7C8c43e834c2E4D292",
    "contractAddress": "0x2d260f17EB559E18D481510C7D11FA30096BFeFA",
    "transactionIndex": 0,
    "gasUsed": "1362722",
    "logsBloom": "0x
    "blockHash": "0xb07799c658c8d98002c98e703bec6f38cc6dcb3b58b57e6c9307cb142db75c6a",
    "transactionHash": "0xaf78c26f62957a7a264f34e97fdba937a5bbed1ac5437e003aa1bfcd8e70d24a",
    "logs": [],
    "blockNumber": 4359809,
    "cumulativeGasUsed": "1362722",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x340afFe21AB391FE1C2C5AEBBB84BF5cF236205f",
    300
  ],
  "numDeployments": 1,
  "solcInputHash": "042bb38775ac53edb0ea149b7521a2fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialRelayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialFeesRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intiailChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTx\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"yarTxHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum YarHub.TxStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usedFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesToReturn\",\"type\":\"uint256\"}],\"name\":\"CommitTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTx\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"yarTxHash\",\"type\":\"bytes32\"}],\"name\":\"CreateTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EarnedFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTx\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"yarTxHash\",\"type\":\"bytes32\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"intiailChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTX\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"targetTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"usedFees\",\"type\":\"uint256\"}],\"name\":\"completeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTX\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"initialTxHash\",\"type\":\"bytes32\"}],\"name\":\"createTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTokenAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTX\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"feeTokensToLock\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTX\",\"type\":\"tuple\"}],\"name\":\"getYarTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTX\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"targetTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"usedFees\",\"type\":\"uint256\"}],\"name\":\"rejectTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeesRation\",\"type\":\"uint256\"}],\"name\":\"setFeesRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"yarTxHash\",\"type\":\"bytes32\"}],\"name\":\"wrappedYarTXs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct YarLib.YarTX\",\"name\":\"yarTx\",\"type\":\"tuple\"},{\"internalType\":\"enum YarHub.TxStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lockedFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedFees\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"initialTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"targetTxHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YarHub.sol\":\"YarHub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/YarHub.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { YarLib } from \\\"./YarLib.sol\\\";\\nimport { YarResponse } from \\\"./YarResponse.sol\\\";\\n\\ncontract YarHub {\\n    address public relayer;\\n\\n    uint256 public feesRatio;\\n\\n    uint256 public totalLockedFees;\\n    uint256 public feesBalance;\\n    uint256 public earnedFees;\\n\\n    enum TxStatus {\\n        NotExists,\\n        WaitForPay,\\n        InProgress,\\n        Completed,\\n        Rejected\\n    }\\n\\n    struct WrappedYarTX {\\n        YarLib.YarTX yarTx;\\n        TxStatus status;\\n        uint256 lockedFees;\\n        uint256 usedFees;\\n        bytes32 initialTxHash;\\n        bytes32 targetTxHash;\\n    }\\n\\n    mapping(bytes32 yarTxHash => WrappedYarTX hubTx) public wrappedYarTXs;\\n\\n    event CreateTransaction(YarLib.YarTX yarTx, bytes32 yarTxHash);\\n\\n    event ExecuteTransaction(YarLib.YarTX yarTx, bytes32 yarTxHash);\\n\\n    event CommitTransaction(\\n        YarLib.YarTX yarTx,\\n        bytes32 yarTxHash,\\n        TxStatus status,\\n        uint256 usedFees,\\n        uint256 feesToReturn\\n    );\\n\\n    event Deposit(address account, uint256 amount);\\n\\n    event Approve(address account, uint256 intiailChainId, address spender, uint256 amount);\\n\\n    event EarnedFees(uint256 amount);\\n\\n    mapping(address account => mapping(uint256 chainId => mapping(address spender => uint256 amount)))\\n        public allowance;\\n\\n    constructor(address initialRelayer, uint256 initialFeesRatio) {\\n        relayer = initialRelayer;\\n        require(initialFeesRatio <= 10000, \\\"initialFeesRatio > 100%\\\");\\n        feesRatio = initialFeesRatio;\\n    }\\n\\n    receive() external payable {}\\n\\n    mapping(address account => uint256 feeTokenAmount) public deposits;\\n\\n    function setFeesRatio(uint256 newFeesRation) external {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        require(newFeesRation <= 10000, \\\"newFeesRation > 100%\\\");\\n        feesRatio = newFeesRation;\\n    }\\n\\n    function withdrawFees(uint256 amount) external {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        require(amount <= feesBalance, \\\"feesBalance!\\\");\\n        feesBalance -= amount;\\n        (bool success, bytes memory result) = msg.sender.call{ value: amount }(\\\"\\\");\\n        if (success == false) {\\n            assembly {\\n                revert(add(result, 32), mload(result))\\n            }\\n        }\\n    }\\n\\n    function getYarTxHash(YarLib.YarTX calldata yarTX) public pure returns (bytes32) {\\n        return keccak256(abi.encode(yarTX));\\n    }\\n\\n    function deposit(address account, uint256 feeTokenAmount) public {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        deposits[account] += feeTokenAmount;\\n        emit Deposit(account, feeTokenAmount);\\n    }\\n\\n    function withdraw(uint256 amount) external {\\n        require(deposits[msg.sender] >= amount, \\\"amount!\\\");\\n        deposits[msg.sender] -= amount;\\n        (bool success, bytes memory result) = msg.sender.call{ value: amount }(\\\"\\\");\\n        if (success == false) {\\n            assembly {\\n                revert(add(result, 32), mload(result))\\n            }\\n        }\\n    }\\n\\n    function approve(\\n        address account,\\n        uint256 intiailChainId,\\n        address spender,\\n        uint256 amount\\n    ) external {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        allowance[account][intiailChainId][spender] = amount;\\n        emit Approve(account, intiailChainId, spender, amount);\\n    }\\n\\n    function createTransaction(YarLib.YarTX calldata yarTX, bytes32 initialTxHash) external {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        bytes32 yarTxHash = getYarTxHash(yarTX);\\n        wrappedYarTXs[yarTxHash] = WrappedYarTX(\\n            yarTX,\\n            TxStatus.WaitForPay,\\n            0,\\n            0,\\n            initialTxHash,\\n            bytes32(0)\\n        );\\n        emit CreateTransaction(yarTX, getYarTxHash(yarTX));\\n    }\\n\\n    function executeTransaction(YarLib.YarTX calldata yarTX, uint256 feeTokensToLock) external {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        bytes32 yarTxHash = keccak256(abi.encode(yarTX));\\n        require(wrappedYarTXs[yarTxHash].status == TxStatus.WaitForPay, \\\"only WaitForPay!\\\");\\n\\n        require(deposits[yarTX.payer] >= feeTokensToLock, \\\"feeTokensToLock!\\\");\\n        if (yarTX.payer != yarTX.sender) {\\n            require(\\n                allowance[yarTX.payer][yarTX.initialChainId][yarTX.sender] >= feeTokensToLock,\\n                \\\"deposit allowance!\\\"\\n            );\\n            allowance[yarTX.payer][yarTX.initialChainId][yarTX.sender] -= feeTokensToLock;\\n        }\\n        deposits[yarTX.payer] -= feeTokensToLock;\\n        wrappedYarTXs[yarTxHash].lockedFees = feeTokensToLock;\\n        wrappedYarTXs[yarTxHash].status = TxStatus.InProgress;\\n\\n        totalLockedFees += feeTokensToLock;\\n\\n        emit ExecuteTransaction(yarTX, getYarTxHash(yarTX));\\n    }\\n\\n    function completeTransaction(\\n        YarLib.YarTX calldata yarTX,\\n        bytes32 targetTxHash,\\n        uint256 usedFees\\n    ) external {\\n        _commitTransaction(yarTX, targetTxHash, TxStatus.Completed, usedFees);\\n    }\\n\\n    function rejectTransaction(\\n        YarLib.YarTX calldata yarTX,\\n        bytes32 targetTxHash,\\n        uint256 usedFees\\n    ) external {\\n        _commitTransaction(yarTX, targetTxHash, TxStatus.Rejected, usedFees);\\n    }\\n\\n    function _commitTransaction(\\n        YarLib.YarTX calldata yarTX,\\n        bytes32 targetTxHash,\\n        TxStatus status,\\n        uint256 usedFees\\n    ) internal {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        bytes32 yarTxHash = keccak256(abi.encode(yarTX));\\n        require(\\n            wrappedYarTXs[yarTxHash].status == TxStatus.InProgress,\\n            \\\"only on progress can updated!\\\"\\n        );\\n\\n        wrappedYarTXs[yarTxHash].status = status;\\n        wrappedYarTXs[yarTxHash].usedFees = usedFees;\\n        wrappedYarTXs[yarTxHash].targetTxHash = targetTxHash;\\n\\n        feesBalance += usedFees;\\n\\n        uint256 txEarnedFees = (((1e18 * usedFees) / (10000 + feesRatio)) * feesRatio) / 1e18;\\n        earnedFees += txEarnedFees;\\n\\n        uint256 lockedFees = wrappedYarTXs[yarTxHash].lockedFees;\\n        uint256 feesToReturn = lockedFees > usedFees ? lockedFees - usedFees : 0;\\n        deposits[yarTX.payer] += feesToReturn;\\n\\n        totalLockedFees -= lockedFees;\\n\\n        emit EarnedFees(txEarnedFees);\\n        emit CommitTransaction(yarTX, getYarTxHash(yarTX), status, usedFees, feesToReturn);\\n    }\\n}\\n\",\"keccak256\":\"0x94c81739637bac93bd4e1d47b81688133f493bc58757b8e71e07f0cac4060709\",\"license\":\"UNLICENSED\"},\"contracts/YarLib.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nlibrary YarLib {\\n    struct YarTX {\\n        uint256 initialChainId;\\n        address sender;\\n        address payer;\\n        uint256 targetChainId;\\n        address target;\\n        uint256 value;\\n        bytes data;\\n        uint256 _nonce;\\n    }\\n}\\n\",\"keccak256\":\"0xf0ea5f3cda5934fe7a5779f3b20e0432adee9f89edd90f40483b2fb4ef64cdb5\",\"license\":\"UNLICENSED\"},\"contracts/YarResponse.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { YarLib } from \\\"./YarLib.sol\\\";\\n\\ncontract YarResponse {\\n    address public relayer;\\n\\n    YarLib.YarTX internal _trustedYarTx;\\n\\n    function trustedYarTx() external view returns (YarLib.YarTX memory) {\\n        return _trustedYarTx;\\n    }\\n\\n    constructor(address intialRelayer) {\\n        relayer = intialRelayer;\\n    }\\n\\n    function deliver(YarLib.YarTX calldata yarTx) external payable {\\n        require(msg.sender == relayer, \\\"only relayer!\\\");\\n        require(yarTx.value == msg.value, \\\"msg.value!\\\");\\n\\n        _trustedYarTx = yarTx;\\n\\n        (bool success, bytes memory result) = yarTx.target.call{ value: yarTx.value }(yarTx.data);\\n        if (success == false) {\\n            assembly {\\n                revert(add(result, 32), mload(result))\\n            }\\n        }\\n\\n        delete _trustedYarTx;\\n    }\\n}\\n\",\"keccak256\":\"0xc5781ca75b8096b94ed55748f91a9a084dcdc09e68e90104ef314e61c16e82be\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080346100ca57601f6117c638819003918201601f19168301916001600160401b038311848410176100cf5780849260409485528339810103126100ca5780516001600160a01b03811691908290036100ca5760200151600080546001600160a01b0319169092179091556127108111610085576001556040516116e090816100e68239f35b60405162461bcd60e51b815260206004820152601760248201527f696e697469616c46656573526174696f203e20313030250000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806309a36a991461013b57806315714666146101365780631d9c4b1e146101315780632d2494401461012c5780632e1a7d4d1461012757806347e7ef241461012257806355a305861461011d5780635e318e0714610118578063637b888f146101135780637518c9651461010e5780637eb2e835146101095780638406c0791461010457806389045e05146100ff578063b1b3ffd9146100fa578063cb41a958146100f5578063de035386146100f0578063f34d2b5f146100eb5763fc7e286d0361000e57610fb7565b610e78565b610c56565b610b70565b610b52565b610b34565b610b0b565b610a4f565b610a31565b6109ee565b610968565b61071d565b610649565b6105af565b6104d2565b610246565b6101d3565b610163565b6001600160a01b0381160361015157565b600080fd5b359061016182610140565b565b346101515760603660031901126101515760206101ca60043561018581610140565b6044359061019282610140565b60018060a01b0316600052600683526040600020602435600052835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b34610151576020366003190112610151576004356101fc60018060a01b03600054163314610ff4565b612710811161020a57600155005b60405162461bcd60e51b81526020600482015260146024820152736e657746656573526174696f6e203e203130302560601b6044820152606490fd5b34610151576000366003190112610151576020600254604051908152f35b90600182811c92168015610294575b602083101461027e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610273565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176102d057604052565b61029e565b90601f8019910116810190811067ffffffffffffffff8211176102d057604052565b906040519182600082549261030b84610264565b9081845260019485811690816000146103785750600114610335575b5050610161925003836102d5565b9093915060005260209081600020936000915b81831061036057505061016193508201013880610327565b85548884018501529485019487945091830191610348565b91505061016194506020925060ff191682840152151560051b8201013880610327565b60405190610100820182811067ffffffffffffffff8211176102d057604052565b919082519283825260005b8481106103e8575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103c7565b6005111561040657565b634e487b7160e01b600052602160045260246000fd5b9060058210156104065752565b926104bf60a09592989796939860c08652805160c087015260e06104ab6001808a1b0380602085015116838a015260408401511661010090818a015260608401516101208a015261048a60808501516101408b019060018060a01b03169052565b898401516101608a015260c0840151906101808a01526101c08901906103bc565b9101516101a087015298602086019061041c565b6040840152606083015260808201520152565b3461015157602036600319011261015157600435600052600560205260406000206104fb61039b565b8154815260018201546001600160a01b0316602082015260028201546001600160a01b03166040820152600382015460608201526004820154610552906001600160a01b03165b6001600160a01b03166080830152565b600582015460a0820152610568600683016102f7565b60c0820152600782015460e08201526105ab610588600884015460ff1690565b92600981015490600a810154600c600b8301549201549260405196879687610429565b0390f35b346101515760203660031901126101515760043560009033825260076020528060408320541061061a5733600090815260076020526040902082918291829182916105fb828254611046565b9055335af161060861106f565b9015610612575080f35b602081519101fd5b60405162461bcd60e51b8152602060048201526007602482015266616d6f756e742160c81b6044820152606490fd5b346101515760403660031901126101515760043561066681610140565b600054602435916001600160a01b03916106839083163314610ff4565b168060005260076020526040600020908154928084018094116106d3577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c936040935582519182526020820152a1005b611030565b90816101009103126101515790565b6060600319820112610151576004359067ffffffffffffffff821161015157610712916004016106d8565b906024359060443590565b34610151577f082f5d97f343df015336c8cfbbb2d71f9af127aba9fff5d572f41fc76b96b93e61095661074f366106e7565b6000549093919061077b90610774906001600160a01b03165b6001600160a01b031690565b3314610ff4565b604051602081019061079f81610791878561117b565b03601f1981018352826102d5565b519020906107d860026107c960086107c1866000526005602052604060002090565b015460ff1690565b6107d2816103fc565b146115b5565b6107ff60086107f1846000526005602052604060002090565b01805460ff19166004179055565b84600a610816846000526005602052604060002090565b0155600c61082e836000526005602052604060002090565b015561084461083f856003546111c2565b600355565b7f89974c0e08a4018a1435e3f74b23ddf44a2d9a7546b22b57716a7fa71f3ce62d61093d60096108ca6108a561089761087c8a611601565b6108926001549161088c836111b2565b9061162c565b611619565b670de0b6b3a7640000900490565b946108ba6108b5876004546111c2565b600455565b6000526005602052604060002090565b01549260008785111561095b575061092d6109286108e88987611046565b955b6109136108f960408b0161152b565b6001600160a01b0316600090815260076020526040902090565b61091e8882546111c2565b9055600254611046565b600255565b6040519081529081906020820190565b0390a16109498361118f565b936040519485948561164c565b0390a1005b61092861092d91956108ea565b346101515760203660031901126101515760043560009061099360018060a01b038354163314610ff4565b6003548082116109ba578280836109af61083f83968496611046565b335af161060861106f565b60405162461bcd60e51b815260206004820152600c60248201526b6665657342616c616e63652160a01b6044820152606490fd5b346101515760203660031901126101515760043567ffffffffffffffff811161015157610a29610a2460209236906004016106d8565b61118f565b604051908152f35b34610151576000366003190112610151576020600354604051908152f35b3461015157608036600319011261015157600435610a6c81610140565b7fbdbc3a9424c1eba6e7ab27814f2dc9b66df2138a9912c0a89085e9967c105d716080602435604435610a9e81610140565b6064359060018060a01b039081600097610abc828a54163314610ff4565b169384885260066020526040882081895260205283610af08360408b209060018060a01b0316600052602052604060002090565b5560405194855260208501521660408301526060820152a180f35b34610151576000366003190112610151576000546040516001600160a01b039091168152602090f35b34610151576000366003190112610151576020600154604051908152f35b34610151576000366003190112610151576020600454604051908152f35b346101515760403660031901126101515760043567ffffffffffffffff811161015157610ba19036906004016106d8565b7f9cd244566ef9a4d7cc13cf6f8e93d2deb524f34a7dd20c1e7a5d981caf22f535600091610bd960018060a01b038454163314610ff4565b610c37610be58261118f565b610c3260405191610bf5836102b4565b610bff3686611216565b83526001602084015286604084015286606084015260243560808401528660a08401526000526005602052604060002090565b6113e2565b610c408161118f565b90610c50604051928392836114d0565b0390a180f35b346101515760403660031901126101515760043567ffffffffffffffff811161015157610ca87f1701820f9b279d4e88913cdaa67614b15714ea412a6e7697430ee06fbd24ab699136906004016106d8565b610db6610928602435610cc861077461076860005460018060a01b031690565b610dae6008610da06040516020810190610ce6816107918b8561117b565b519020610d156001610d06856107c1856000526005602052604060002090565b610d0f816103fc565b146114ec565b610d6a6108f960408a01610d3788610d2f6108f98461152b565b541015611535565b8a610d418261152b565b6020820190610d526107688361152b565b6001600160a01b0390911603610dcf575b505061152b565b610d75868254611046565b9055846009610d8e836000526005602052604060002090565b01556000526005602052604060002090565b01805460ff19166002179055565b6002546111c2565b610dbf8161118f565b90610956604051928392836114d0565b610e25610e5e610e6493610e438d610e3b610e1c610e09610def8b61152b565b6001600160a01b0316600090815260066020526040902090565b9435809590600052602052604060002090565b610e258861152b565b60018060a01b0316600052602052604060002090565b541015611574565b610e4f610def8761152b565b90600052602052604060002090565b9161152b565b610e6f898254611046565b90558a38610d63565b34610151577f082f5d97f343df015336c8cfbbb2d71f9af127aba9fff5d572f41fc76b96b93e610956610eaa366106e7565b60005490939190610ec790610774906001600160a01b0316610768565b6040516020810190610edd81610791878561117b565b51902090610eff60026107c960086107c1866000526005602052604060002090565b610f266008610f18846000526005602052604060002090565b01805460ff19166003179055565b84600a610f3d846000526005602052604060002090565b0155600c610f55836000526005602052604060002090565b0155610f6661083f856003546111c2565b7f89974c0e08a4018a1435e3f74b23ddf44a2d9a7546b22b57716a7fa71f3ce62d610f9e60096108ca6108a561089761087c8a611601565b0390a1610faa8361118f565b936040519485948561167b565b3461015157602036600319011261015157600435610fd481610140565b60018060a01b031660005260076020526020604060002054604051908152f35b15610ffb57565b60405162461bcd60e51b815260206004820152600d60248201526c6f6e6c792072656c617965722160981b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b919082039182116106d357565b67ffffffffffffffff81116102d057601f01601f191660200190565b3d1561109a573d9061108082611053565b9161108e60405193846102d5565b82523d6000602084013e565b606090565b9035601e198236030181121561015157016020813591019167ffffffffffffffff821161015157813603831361015157565b908060209392818452848401376000828201840152601f01601f1916010190565b9081358152602082013561110581610140565b6001600160a01b039081166020830152604083013561112381610140565b16604082015260608201356060820152611144608083013561054281610140565b60a082013560a082015260e08061117261116160c086018661109f565b6101008060c08801528601916110d1565b93013591015290565b90602061118c9281815201906110f2565b90565b6040516111ac8161079160208201946020865260408301906110f2565b51902090565b906127109182018092116106d357565b919082018092116106d357565b81601f82011215610151578035906111e682611053565b926111f460405194856102d5565b8284526020838301011161015157816000926020809301838601378301015290565b9190610100838203126101515761122b61039b565b928035845261123c60208201610156565b602085015261124d60408201610156565b60408501526060810135606085015261126860808201610156565b608085015260a081013560a085015260c081013567ffffffffffffffff81116101515760e0926112999183016111cf565b60c0850152013560e0830152565b90601f81116112b557505050565b600091825260208220906020601f850160051c830194106112f1575b601f0160051c01915b8281106112e657505050565b8181556001016112da565b90925082906112d1565b919091825167ffffffffffffffff81116102d0576113238161131d8454610264565b846112a7565b602080601f831160011461135f575081929394600092611354575b50508160011b916000199060031b1c1916179055565b01519050388061133e565b90601f1983169561137585600052602060002090565b926000905b8882106113b257505083600195969710611399575b505050811b019055565b015160001960f88460031b161c1916905538808061138f565b8060018596829496860151815501950193019061137a565b9060058110156104065760ff80198354169116179055565b81518051825560208101516001830180546001600160a01b0319166001600160a01b039092169190911790559091600c9160a0919060e09060408101516002870180546001600160a01b0319166001600160a01b039092169190911790556060810151600387015560808101516004870180546001600160a01b0319166001600160a01b0390921691909117905583810151600587015561148a60c0820151600688016112fb565b015160078501556114ab60208201516114a2816103fc565b600886016113ca565b604081015160098501556060810151600a8501556080810151600b8501550151910155565b9291906114e76020916040865260408601906110f2565b930152565b156114f357565b60405162461bcd60e51b815260206004820152601060248201526f6f6e6c792057616974466f725061792160801b6044820152606490fd5b3561118c81610140565b1561153c57565b60405162461bcd60e51b815260206004820152601060248201526f666565546f6b656e73546f4c6f636b2160801b6044820152606490fd5b1561157b57565b60405162461bcd60e51b81526020600482015260126024820152716465706f73697420616c6c6f77616e63652160701b6044820152606490fd5b156115bc57565b60405162461bcd60e51b815260206004820152601d60248201527f6f6e6c79206f6e2070726f67726573732063616e2075706461746564210000006044820152606490fd5b90670de0b6b3a764000091808302928304036106d357565b818102929181159184041417156106d357565b8115611636570490565b634e487b7160e01b600052601260045260246000fd5b909261166560809396959460a0845260a08401906110f2565b9560208301526004604083015260608201520152565b909261169460809396959460a0845260a08401906110f2565b956020830152600360408301526060820152015256fea26469706673582212206e4202d8e76af84e8b10eb8956a84acded814c16113725a98e294e2fa018656a64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806309a36a991461013b57806315714666146101365780631d9c4b1e146101315780632d2494401461012c5780632e1a7d4d1461012757806347e7ef241461012257806355a305861461011d5780635e318e0714610118578063637b888f146101135780637518c9651461010e5780637eb2e835146101095780638406c0791461010457806389045e05146100ff578063b1b3ffd9146100fa578063cb41a958146100f5578063de035386146100f0578063f34d2b5f146100eb5763fc7e286d0361000e57610fb7565b610e78565b610c56565b610b70565b610b52565b610b34565b610b0b565b610a4f565b610a31565b6109ee565b610968565b61071d565b610649565b6105af565b6104d2565b610246565b6101d3565b610163565b6001600160a01b0381160361015157565b600080fd5b359061016182610140565b565b346101515760603660031901126101515760206101ca60043561018581610140565b6044359061019282610140565b60018060a01b0316600052600683526040600020602435600052835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b34610151576020366003190112610151576004356101fc60018060a01b03600054163314610ff4565b612710811161020a57600155005b60405162461bcd60e51b81526020600482015260146024820152736e657746656573526174696f6e203e203130302560601b6044820152606490fd5b34610151576000366003190112610151576020600254604051908152f35b90600182811c92168015610294575b602083101461027e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610273565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176102d057604052565b61029e565b90601f8019910116810190811067ffffffffffffffff8211176102d057604052565b906040519182600082549261030b84610264565b9081845260019485811690816000146103785750600114610335575b5050610161925003836102d5565b9093915060005260209081600020936000915b81831061036057505061016193508201013880610327565b85548884018501529485019487945091830191610348565b91505061016194506020925060ff191682840152151560051b8201013880610327565b60405190610100820182811067ffffffffffffffff8211176102d057604052565b919082519283825260005b8481106103e8575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103c7565b6005111561040657565b634e487b7160e01b600052602160045260246000fd5b9060058210156104065752565b926104bf60a09592989796939860c08652805160c087015260e06104ab6001808a1b0380602085015116838a015260408401511661010090818a015260608401516101208a015261048a60808501516101408b019060018060a01b03169052565b898401516101608a015260c0840151906101808a01526101c08901906103bc565b9101516101a087015298602086019061041c565b6040840152606083015260808201520152565b3461015157602036600319011261015157600435600052600560205260406000206104fb61039b565b8154815260018201546001600160a01b0316602082015260028201546001600160a01b03166040820152600382015460608201526004820154610552906001600160a01b03165b6001600160a01b03166080830152565b600582015460a0820152610568600683016102f7565b60c0820152600782015460e08201526105ab610588600884015460ff1690565b92600981015490600a810154600c600b8301549201549260405196879687610429565b0390f35b346101515760203660031901126101515760043560009033825260076020528060408320541061061a5733600090815260076020526040902082918291829182916105fb828254611046565b9055335af161060861106f565b9015610612575080f35b602081519101fd5b60405162461bcd60e51b8152602060048201526007602482015266616d6f756e742160c81b6044820152606490fd5b346101515760403660031901126101515760043561066681610140565b600054602435916001600160a01b03916106839083163314610ff4565b168060005260076020526040600020908154928084018094116106d3577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c936040935582519182526020820152a1005b611030565b90816101009103126101515790565b6060600319820112610151576004359067ffffffffffffffff821161015157610712916004016106d8565b906024359060443590565b34610151577f082f5d97f343df015336c8cfbbb2d71f9af127aba9fff5d572f41fc76b96b93e61095661074f366106e7565b6000549093919061077b90610774906001600160a01b03165b6001600160a01b031690565b3314610ff4565b604051602081019061079f81610791878561117b565b03601f1981018352826102d5565b519020906107d860026107c960086107c1866000526005602052604060002090565b015460ff1690565b6107d2816103fc565b146115b5565b6107ff60086107f1846000526005602052604060002090565b01805460ff19166004179055565b84600a610816846000526005602052604060002090565b0155600c61082e836000526005602052604060002090565b015561084461083f856003546111c2565b600355565b7f89974c0e08a4018a1435e3f74b23ddf44a2d9a7546b22b57716a7fa71f3ce62d61093d60096108ca6108a561089761087c8a611601565b6108926001549161088c836111b2565b9061162c565b611619565b670de0b6b3a7640000900490565b946108ba6108b5876004546111c2565b600455565b6000526005602052604060002090565b01549260008785111561095b575061092d6109286108e88987611046565b955b6109136108f960408b0161152b565b6001600160a01b0316600090815260076020526040902090565b61091e8882546111c2565b9055600254611046565b600255565b6040519081529081906020820190565b0390a16109498361118f565b936040519485948561164c565b0390a1005b61092861092d91956108ea565b346101515760203660031901126101515760043560009061099360018060a01b038354163314610ff4565b6003548082116109ba578280836109af61083f83968496611046565b335af161060861106f565b60405162461bcd60e51b815260206004820152600c60248201526b6665657342616c616e63652160a01b6044820152606490fd5b346101515760203660031901126101515760043567ffffffffffffffff811161015157610a29610a2460209236906004016106d8565b61118f565b604051908152f35b34610151576000366003190112610151576020600354604051908152f35b3461015157608036600319011261015157600435610a6c81610140565b7fbdbc3a9424c1eba6e7ab27814f2dc9b66df2138a9912c0a89085e9967c105d716080602435604435610a9e81610140565b6064359060018060a01b039081600097610abc828a54163314610ff4565b169384885260066020526040882081895260205283610af08360408b209060018060a01b0316600052602052604060002090565b5560405194855260208501521660408301526060820152a180f35b34610151576000366003190112610151576000546040516001600160a01b039091168152602090f35b34610151576000366003190112610151576020600154604051908152f35b34610151576000366003190112610151576020600454604051908152f35b346101515760403660031901126101515760043567ffffffffffffffff811161015157610ba19036906004016106d8565b7f9cd244566ef9a4d7cc13cf6f8e93d2deb524f34a7dd20c1e7a5d981caf22f535600091610bd960018060a01b038454163314610ff4565b610c37610be58261118f565b610c3260405191610bf5836102b4565b610bff3686611216565b83526001602084015286604084015286606084015260243560808401528660a08401526000526005602052604060002090565b6113e2565b610c408161118f565b90610c50604051928392836114d0565b0390a180f35b346101515760403660031901126101515760043567ffffffffffffffff811161015157610ca87f1701820f9b279d4e88913cdaa67614b15714ea412a6e7697430ee06fbd24ab699136906004016106d8565b610db6610928602435610cc861077461076860005460018060a01b031690565b610dae6008610da06040516020810190610ce6816107918b8561117b565b519020610d156001610d06856107c1856000526005602052604060002090565b610d0f816103fc565b146114ec565b610d6a6108f960408a01610d3788610d2f6108f98461152b565b541015611535565b8a610d418261152b565b6020820190610d526107688361152b565b6001600160a01b0390911603610dcf575b505061152b565b610d75868254611046565b9055846009610d8e836000526005602052604060002090565b01556000526005602052604060002090565b01805460ff19166002179055565b6002546111c2565b610dbf8161118f565b90610956604051928392836114d0565b610e25610e5e610e6493610e438d610e3b610e1c610e09610def8b61152b565b6001600160a01b0316600090815260066020526040902090565b9435809590600052602052604060002090565b610e258861152b565b60018060a01b0316600052602052604060002090565b541015611574565b610e4f610def8761152b565b90600052602052604060002090565b9161152b565b610e6f898254611046565b90558a38610d63565b34610151577f082f5d97f343df015336c8cfbbb2d71f9af127aba9fff5d572f41fc76b96b93e610956610eaa366106e7565b60005490939190610ec790610774906001600160a01b0316610768565b6040516020810190610edd81610791878561117b565b51902090610eff60026107c960086107c1866000526005602052604060002090565b610f266008610f18846000526005602052604060002090565b01805460ff19166003179055565b84600a610f3d846000526005602052604060002090565b0155600c610f55836000526005602052604060002090565b0155610f6661083f856003546111c2565b7f89974c0e08a4018a1435e3f74b23ddf44a2d9a7546b22b57716a7fa71f3ce62d610f9e60096108ca6108a561089761087c8a611601565b0390a1610faa8361118f565b936040519485948561167b565b3461015157602036600319011261015157600435610fd481610140565b60018060a01b031660005260076020526020604060002054604051908152f35b15610ffb57565b60405162461bcd60e51b815260206004820152600d60248201526c6f6e6c792072656c617965722160981b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b919082039182116106d357565b67ffffffffffffffff81116102d057601f01601f191660200190565b3d1561109a573d9061108082611053565b9161108e60405193846102d5565b82523d6000602084013e565b606090565b9035601e198236030181121561015157016020813591019167ffffffffffffffff821161015157813603831361015157565b908060209392818452848401376000828201840152601f01601f1916010190565b9081358152602082013561110581610140565b6001600160a01b039081166020830152604083013561112381610140565b16604082015260608201356060820152611144608083013561054281610140565b60a082013560a082015260e08061117261116160c086018661109f565b6101008060c08801528601916110d1565b93013591015290565b90602061118c9281815201906110f2565b90565b6040516111ac8161079160208201946020865260408301906110f2565b51902090565b906127109182018092116106d357565b919082018092116106d357565b81601f82011215610151578035906111e682611053565b926111f460405194856102d5565b8284526020838301011161015157816000926020809301838601378301015290565b9190610100838203126101515761122b61039b565b928035845261123c60208201610156565b602085015261124d60408201610156565b60408501526060810135606085015261126860808201610156565b608085015260a081013560a085015260c081013567ffffffffffffffff81116101515760e0926112999183016111cf565b60c0850152013560e0830152565b90601f81116112b557505050565b600091825260208220906020601f850160051c830194106112f1575b601f0160051c01915b8281106112e657505050565b8181556001016112da565b90925082906112d1565b919091825167ffffffffffffffff81116102d0576113238161131d8454610264565b846112a7565b602080601f831160011461135f575081929394600092611354575b50508160011b916000199060031b1c1916179055565b01519050388061133e565b90601f1983169561137585600052602060002090565b926000905b8882106113b257505083600195969710611399575b505050811b019055565b015160001960f88460031b161c1916905538808061138f565b8060018596829496860151815501950193019061137a565b9060058110156104065760ff80198354169116179055565b81518051825560208101516001830180546001600160a01b0319166001600160a01b039092169190911790559091600c9160a0919060e09060408101516002870180546001600160a01b0319166001600160a01b039092169190911790556060810151600387015560808101516004870180546001600160a01b0319166001600160a01b0390921691909117905583810151600587015561148a60c0820151600688016112fb565b015160078501556114ab60208201516114a2816103fc565b600886016113ca565b604081015160098501556060810151600a8501556080810151600b8501550151910155565b9291906114e76020916040865260408601906110f2565b930152565b156114f357565b60405162461bcd60e51b815260206004820152601060248201526f6f6e6c792057616974466f725061792160801b6044820152606490fd5b3561118c81610140565b1561153c57565b60405162461bcd60e51b815260206004820152601060248201526f666565546f6b656e73546f4c6f636b2160801b6044820152606490fd5b1561157b57565b60405162461bcd60e51b81526020600482015260126024820152716465706f73697420616c6c6f77616e63652160701b6044820152606490fd5b156115bc57565b60405162461bcd60e51b815260206004820152601d60248201527f6f6e6c79206f6e2070726f67726573732063616e2075706461746564210000006044820152606490fd5b90670de0b6b3a764000091808302928304036106d357565b818102929181159184041417156106d357565b8115611636570490565b634e487b7160e01b600052601260045260246000fd5b909261166560809396959460a0845260a08401906110f2565b9560208301526004604083015260608201520152565b909261169460809396959460a0845260a08401906110f2565b956020830152600360408301526060820152015256fea26469706673582212206e4202d8e76af84e8b10eb8956a84acded814c16113725a98e294e2fa018656a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2654,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "relayer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2656,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "feesRatio",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2658,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "totalLockedFees",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2660,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "feesBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2662,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "earnedFees",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2688,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "wrappedYarTXs",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_struct(WrappedYarTX)2683_storage)"
      },
      {
        "astId": 2744,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "allowance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))"
      },
      {
        "astId": 2775,
        "contract": "contracts/YarHub.sol:YarHub",
        "label": "deposits",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(TxStatus)2668": {
        "encoding": "inplace",
        "label": "enum YarHub.TxStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(WrappedYarTX)2683_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct YarHub.WrappedYarTX)",
        "numberOfBytes": "32",
        "value": "t_struct(WrappedYarTX)2683_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_struct(WrappedYarTX)2683_storage": {
        "encoding": "inplace",
        "label": "struct YarHub.WrappedYarTX",
        "members": [
          {
            "astId": 2671,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "yarTx",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(YarTX)3317_storage"
          },
          {
            "astId": 2674,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "status",
            "offset": 0,
            "slot": "8",
            "type": "t_enum(TxStatus)2668"
          },
          {
            "astId": 2676,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "lockedFees",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 2678,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "usedFees",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 2680,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "initialTxHash",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes32"
          },
          {
            "astId": 2682,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "targetTxHash",
            "offset": 0,
            "slot": "12",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(YarTX)3317_storage": {
        "encoding": "inplace",
        "label": "struct YarLib.YarTX",
        "members": [
          {
            "astId": 3302,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "initialChainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3304,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "sender",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3306,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "payer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 3308,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "targetChainId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3310,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "target",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 3312,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "value",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3314,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "data",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes_storage"
          },
          {
            "astId": 3316,
            "contract": "contracts/YarHub.sol:YarHub",
            "label": "_nonce",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}